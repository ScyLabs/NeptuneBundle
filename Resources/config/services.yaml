parameters:
  changelogs:
    active: false
    version: "1.0"

services:
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: true

  ScyLabs\NeptuneBundle\:
    resource: "../../*"
    exclude: "../../{Entity,Migrations,Tests,Kernel.php}"

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  ScyLabs\NeptuneBundle\Controller\:
    resource: "../../Controller"
    tags: ["controller.service_arguments"]

  ScyLabs\NeptuneBundle\Repository\:
    resource: "../../Repository"

  #Debut service
  ScyLabs\NeptuneBundle\Services\FileUploader:
    arguments:
      $targetDirectory: "%uploads_directory%"

  ScyLabs\NeptuneBundle\Services\CleanText:
    arguments:

  #Fin service

  #Listeners

  ScyLabs\NeptuneBundle\EventListener\FileListener:
    tags:
      - { name: doctrine.event_listener, event: prePersist }
      - { name: doctrine.event_listener, event: preUpdate }
      - { name: doctrine.event_listener, event: preRemove }

  ScyLabs\NeptuneBundle\EventListener\LoadORMMetadataSubscriber:
    arguments:
      - "@service_container"
    tags:
      - { name: doctrine.event_subscriber }

  ScyLabs\NeptuneBundle\EventListener\TypeListener:
    tags:
      - { name: doctrine.event_listener, event: prePersist }
      - { name: doctrine.event_listener, event: preUpdate }

  ScyLabs\NeptuneBundle\EventListener\EntityListener:
    arguments:
      $langs: "%langs%"
    tags:
      - { name: doctrine.event_listener, event: postPersist }
      - { name: doctrine.event_listener, event: preUpdate }
      - { name: doctrine.event_listener, event: postUpdate }
  ScyLabs\NeptuneBundle\EventListener\CompressListener:
    tags:
      - { name: kernel.event_listener, event: kernel.controller }
    calls:
      - [setContainer, ["@service_container"]]

  ScyLabs\NeptuneBundle\Form\ElementForm:
    calls:
      - [setContainer, ["@service_container"]]

  ScyLabs\NeptuneBundle\Form\ZoneForm:
    calls:
      - [setContainer, ["@service_container"]]

  ScyLabs\NeptuneBundle\Services\ClassFounder:
    calls:
      - [setContainer, ["@service_container"]]
  #Fin listeners
